# Configuration for ESM-Flex Temperature-Aware Project

data:
  # Path to the directory containing processed data splits
  data_dir: data/processed
  # #!#!# REFACTOR NOTE: Update this path to your *NEW* aggregated CSV file!
  raw_csv_path: /path/to/your/aggregated_rmsf_data.csv
  # Path where temperature scaling parameters (min/max) will be saved/loaded from data_dir
  temp_scaling_filename: temp_scaling_params.json

model:
  # Identifier for the ESM-C model from the 'esm' library.
  esm_version: "esmc_600m"

  # Regression head configuration
  regression:
    # Hidden dimension for the MLP head. Set to 0 for a direct Linear layer.
    hidden_dim: 64 #!#!# REFACTOR NOTE: Slightly increased default head size due to added temperature input
    # Dropout rate for the regression head
    dropout: 0.1

training:
  # Number of training epochs
  num_epochs: 50 #!#!# REFACTOR NOTE: Increased default epochs for potentially more complex task
  # Batch size (adjust based on GPU memory and model size)
  batch_size: 4
  # Learning rate for the optimizer
  learning_rate: 1.0e-4
  # Weight decay for the optimizer (applied only to non-bias/norm params)
  weight_decay: 0.01
  # AdamW epsilon parameter
  adam_epsilon: 1.0e-8
  # Gradient accumulation steps (effective_batch_size = batch_size * accumulation_steps)
  accumulation_steps: 4
  # Max gradient norm for clipping (0 to disable)
  max_gradient_norm: 1.0
  # Learning rate scheduler patience (epochs) based on validation correlation
  scheduler_patience: 5
  # Early stopping patience (epochs) based on validation correlation
  early_stopping_patience: 10
  # Random seed for reproducibility
  seed: 42
  # Optional: Maximum sequence length to process (helps manage memory)
  # max_length: 1024
  # Size of length buckets for grouping similar-length sequences in dataloader
  length_bucket_size: 50
  # Frequency (in epochs) to save intermediate checkpoints
  checkpoint_interval: 5

output:
  # Directory to save trained models, logs, plots, and scaling parameters
  model_dir: models

# Prediction settings (used by predict.py if called via main.py)
prediction:
  batch_size: 8 # Can often be larger than training batch size
  plot_predictions: true
  smoothing_window: 1 # Window size for smoothing plots (1 = no smoothing)
  # Optional: max_length for prediction if different from training
  # max_length: 1024

